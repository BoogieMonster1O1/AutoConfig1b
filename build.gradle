plugins {
    id 'fabric-loom' version '0.2.1-SNAPSHOT'
    id 'maven-publish'
    id "com.palantir.git-version" version "0.11.0"
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'java'
    id 'com.matthewprenger.cursegradle' version '1.2.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${gitVersion()}+mc${project.minecraft_version}"
group = project.maven_group

minecraft {
}

repositories {
    mavenCentral()
    maven {
        url = "http://maven.fabricmc.net"
    }
    maven {
        url = "https://minecraft.curseforge.com/api/maven"
    }
    maven {
        url = "https://maven.fabricmc.net/io/github/prospector/modmenu/ModMenu/"
    }
}

dependencies {
    shadow("blue.endless:jankson:${project.jankson_version}") { transitive = false }
    implementation "blue.endless:jankson:${project.jankson_version}"

    shadow("com.moandjiezana.toml:toml4j:${project.toml4j_version}") { transitive = false }
    implementation("com.moandjiezana.toml:toml4j:${project.toml4j_version}")

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    modCompile "net.fabricmc:fabric:${project.fabric_version}"

    modCompile "cloth-config:ClothConfig:${project.cloth_config_version}"

    modCompile "io.github.prospector.modmenu:ModMenu:1.4.0-72"

    // temporary hack until MC-148461 is fixed
    compile "org.lwjgl:lwjgl-jemalloc:3.2.1"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        filter { line -> line.replace("%VERSION%", "${project.version}") }
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

shadowJar {
    relocate 'blue.endless.jankson', 'me.sargunvohra.mcmods.autoconfig.shadowed.blue.endless.jankson'
    relocate 'com.moandjiezana.toml', 'me.sargunvohra.mcmods.autoconfig.shadowed.com.moandjiezana.toml'
    archiveClassifier.set("")
    configurations = [project.configurations.shadow]
}

remapJar {
    dependsOn shadowJar
    jar = shadowJar.archiveFile.get().asFile
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(jar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        if (project.hasProperty('publish_maven_url')) {
            maven {
                url publish_maven_url
                credentials(AwsCredentials) {
                    accessKey publish_maven_access_key
                    secretKey publish_maven_secret_key
                }
            }
        }
    }
}

curseforge {
    if (project.hasProperty('curseforge_api_key')) {
        apiKey = curseforge_api_key
    }
    project {
        id = '319839'
        changelog = file('changelog.txt')
        releaseType = 'release'
        addGameVersion '1.14-Snapshot'
        relations {
            embeddedLibrary 'fabric'
            embeddedLibrary 'cloth-config'
            embeddedLibrary 'auto-config'
        }
        options {
            forgeGradleIntegration = false
        }
    }
}

afterEvaluate {
    tasks.curseforge319839.dependsOn remapJar
}
